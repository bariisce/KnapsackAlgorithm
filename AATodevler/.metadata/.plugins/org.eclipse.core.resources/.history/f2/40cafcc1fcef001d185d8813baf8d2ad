package knapsackOdev2;

public class Knapsack {
	/*public int knapsack(int W, int nesneAgirligi[], int degerler[], int n) {
		//W Ã§anta kapasitesini temsil ediyor.
        int i, w;
        int K[][] = new int[n + 1][W + 1];

        for (i = 0; i <= n; i++) {
            for (w = 0; w <= W; w++) {
                if (i == 0 || w == 0)
                    K[i][w] = 0;
                else if (nesneAgirligi[i - 1] <= w)
                    K[i][w] = Math.max(degerler[i - 1] + K[i - 1][w - nesneAgirligi[i - 1]], K[i - 1][w]);
                else
                    K[i][w] = K[i - 1][w];
            }
        }

        return K[n][W];
    }*/
	public int knapsack(int W, int[] nesneAgirligi, int[] degerler, int n,int a) {
		int[][] k = new int[n+1][W+1];
		
		for(int i=1;i<=n;i++) {
			for(int w=1;w<=W;w++) {
				if(nesneAgirligi[i-1]<=w) {
					k[i][w]=Math.max(degerler[i - 1] + k[i - 1][w - nesneAgirligi[i - 1]], k[i - 1][w]);
				}
				else {
					k[i][w]=k[i-1][w];
				}
			}
		}
		return k[n][W];
	}
}
